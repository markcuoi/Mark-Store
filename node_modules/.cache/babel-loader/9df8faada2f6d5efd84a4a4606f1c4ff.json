{"ast":null,"code":"import { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport ShopActionType from \"./shops.types\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionType.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionMap => ({\n  type: ShopActionType.FETCH_COLLECTIONS_SUCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionType.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/home/mark/workmine/React-Complete/React Projects/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["firestore","convertCollectionsSnapshotToMap","ShopActionType","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionMap","FETCH_COLLECTIONS_SUCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,SACEA,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,OAAOC,cAAP,MAA2B,eAA3B;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEF,cAAc,CAACG;AADqB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,aAAD,KAAoB;AACzDH,EAAAA,IAAI,EAAEF,cAAc,CAACM,wBADoC;AAEzDC,EAAAA,OAAO,EAAEF;AAFgD,CAApB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AACxDP,EAAAA,IAAI,EAAEF,cAAc,CAACU,yBADmC;AAExDH,EAAAA,OAAO,EAAEE;AAF+C,CAAnB,CAAhC;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMZ,aAAa,GAAGN,+BAA+B,CAACkB,QAAD,CAArD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,aAAD,CAAxB,CAAR;AACD,KALH,EAMGa,KANH,CAMUC,KAAD,IAAWP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAN5B;AAOD,GAXD;AAYD,CAbM","sourcesContent":["import {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\nimport ShopActionType from \"./shops.types\";\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionType.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsSuccess = (collectionMap) => ({\n  type: ShopActionType.FETCH_COLLECTIONS_SUCESS,\n  payload: collectionMap,\n});\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n  type: ShopActionType.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage,\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n\n    collectionRef\n      .get()\n      .then((snapshot) => {\n        const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionMap));\n      })\n      .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}