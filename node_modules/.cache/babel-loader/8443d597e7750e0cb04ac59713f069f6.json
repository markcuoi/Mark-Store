{"ast":null,"code":"import { takeEvery, call } from \"@redux-saga/core/effects\";\nimport ShopActionType from \"./shops.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionFailure } from \"./shop.actions\";\nexport function* fetchCollectionsStartAsync() {\n  console.log(\"I am fired\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n  } catch (error) {} // dispatch(fetchCollectionsStart());\n  // collectionRef\n  //   .get()\n  //   .then((snapshot) => {\n  //     const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionMap));\n  //   })\n  //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionType.FETCH_COLLECTIONS_START, fetchCollectionsStartAsync);\n}","map":{"version":3,"sources":["/home/mark/workmine/React-Complete/React Projects/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","ShopActionType","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionFailure","fetchCollectionsStartAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,0BAAhC;AACA,OAAOC,cAAP,MAA2B,eAA3B;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,SACEC,uBADF,EAEEC,sBAFF,QAGO,gBAHP;AAKA,OAAO,UAAUC,0BAAV,GAAuC;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AAEA,MAAI;AACF,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAC/BG,+BAD+B,EAE/BQ,QAF+B,CAAjC;AAID,GAPD,CAOE,OAAOG,KAAP,EAAc,CAAE,CAV0B,CAW5C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;AACD,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMhB,SAAS,CACbE,cAAc,CAACe,uBADF,EAEbV,0BAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call } from \"@redux-saga/core/effects\";\nimport ShopActionType from \"./shops.types\";\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionFailure,\n} from \"./shop.actions\";\n\nexport function* fetchCollectionsStartAsync() {\n  console.log(\"I am fired\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap,\n      snapshot\n    );\n  } catch (error) {}\n  // dispatch(fetchCollectionsStart());\n\n  // collectionRef\n  //   .get()\n  //   .then((snapshot) => {\n  //     const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionMap));\n  //   })\n  //   .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionType.FETCH_COLLECTIONS_START,\n    fetchCollectionsStartAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}