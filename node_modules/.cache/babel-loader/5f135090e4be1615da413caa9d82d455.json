{"ast":null,"code":"import { takeEvery } from \"@redux-saga/core/effects\";\nimport ShopActionType from \"./shops.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionFailure } from \"./shop.actions\";\nexport function* fetchCollectionsStartAsync() {\n  console.log(\"I am fired\");\n  const collectionRef = firestore.collection(\"collections\");\n  dispatch(fetchCollectionsStart());\n  collectionRef.get().then(snapshot => {\n    const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionType.FETCH_COLLECTIONS_START, fetchCollectionsStartAsync);\n}","map":{"version":3,"sources":["/home/mark/workmine/React-Complete/React Projects/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","ShopActionType","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionFailure","fetchCollectionsStartAsync","console","log","collectionRef","collection","dispatch","fetchCollectionsStart","get","then","snapshot","collectionMap","catch","error","fetchCollectionsFailure","message","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,0BAA1B;AACA,OAAOC,cAAP,MAA2B,eAA3B;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,SACEC,uBADF,EAEEC,sBAFF,QAGO,gBAHP;AAKA,OAAO,UAAUC,0BAAV,GAAuC;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,QAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACAC,EAAAA,QAAQ,CAACC,qBAAqB,EAAtB,CAAR;AAEAH,EAAAA,aAAa,CACVI,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,UAAMC,aAAa,GAAGb,+BAA+B,CAACY,QAAD,CAArD;AACAJ,IAAAA,QAAQ,CAACP,uBAAuB,CAACY,aAAD,CAAxB,CAAR;AACD,GALH,EAMGC,KANH,CAMUC,KAAD,IAAWP,QAAQ,CAACQ,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAN5B;AAOD;AACD,OAAO,UAAUR,qBAAV,GAAkC;AACvC,QAAMZ,SAAS,CACbC,cAAc,CAACoB,uBADF,EAEbf,0BAFa,CAAf;AAID","sourcesContent":["import { takeEvery } from \"@redux-saga/core/effects\";\nimport ShopActionType from \"./shops.types\";\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionFailure,\n} from \"./shop.actions\";\n\nexport function* fetchCollectionsStartAsync() {\n  console.log(\"I am fired\");\n\n  const collectionRef = firestore.collection(\"collections\");\n  dispatch(fetchCollectionsStart());\n\n  collectionRef\n    .get()\n    .then((snapshot) => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionMap));\n    })\n    .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionType.FETCH_COLLECTIONS_START,\n    fetchCollectionsStartAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}